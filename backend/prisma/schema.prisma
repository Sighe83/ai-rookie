generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid()) @db.Uuid
  email         String    @unique
  name          String
  phone         String?
  company       String?
  department    String?
  role          String    @default("USER")
  siteMode      String    @default("B2B") @map("site_mode")
  password      String?
  emailVerified Boolean   @default(false) @map("email_verified")
  isActive      Boolean   @default(true) @map("is_active")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  bookings      Booking[]
  tutor         Tutor?

  @@map("users")
}

model Tutor {
  id           String              @id @default(uuid()) @db.Uuid
  userId       String              @unique @map("user_id") @db.Uuid
  title        String
  specialty    String
  experience   String?
  valueProp    String?             @map("value_prop")
  img          String?
  basePrice    Int                 @map("base_price")
  price        Int
  isActive     Boolean             @default(true) @map("is_active")
  createdAt    DateTime            @default(now()) @map("created_at")
  updatedAt    DateTime            @updatedAt @map("updated_at")
  bookings     Booking[]
  sessions     Session[]
  availability TutorAvailability[]
  user         User                @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("tutors")
}

model Session {
  id            String    @id @default(uuid()) @db.Uuid
  tutorId       String    @map("tutor_id") @db.Uuid
  title         String
  description   String
  duration      Int       @default(60)
  priceOverride Int?      @map("price_override")
  isActive      Boolean   @default(true) @map("is_active")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  bookings      Booking[]
  tutor         Tutor     @relation(fields: [tutorId], references: [id], onDelete: Cascade)

  @@index([tutorId])
  @@map("sessions")
}

model Booking {
  id               String    @id @default(uuid()) @db.Uuid
  userId           String    @map("user_id") @db.Uuid
  tutorId          String    @map("tutor_id") @db.Uuid
  sessionId        String    @map("session_id") @db.Uuid
  format           String
  selectedDateTime DateTime  @map("selected_date_time")
  participants     Int?      @default(1)
  totalPrice       Int       @map("total_price")
  status           String?   @default("PENDING")
  siteMode         String    @map("site_mode")
  contactName      String    @map("contact_name")
  contactEmail     String    @map("contact_email")
  contactPhone     String?   @map("contact_phone")
  company          String?
  department       String?
  paymentStatus    String?   @default("PENDING") @map("payment_status")
  paymentIntentId  String?   @map("payment_intent_id")
  paidAt           DateTime? @map("paid_at")
  notes            String?
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")
  confirmedAt      DateTime? @map("confirmed_at")
  cancelledAt      DateTime? @map("cancelled_at")
  session          Session   @relation(fields: [sessionId], references: [id])
  tutor            Tutor     @relation(fields: [tutorId], references: [id])
  user             User      @relation(fields: [userId], references: [id])

  @@index([sessionId])
  @@index([tutorId])
  @@index([userId])
  @@map("bookings")
}

model TutorAvailability {
  id        String   @id @default(uuid()) @db.Uuid
  tutorId   String   @map("tutor_id") @db.Uuid
  date      DateTime @db.Date
  timeSlots Json     @map("time_slots")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  tutor     Tutor    @relation(fields: [tutorId], references: [id], onDelete: Cascade)

  @@unique([tutorId, date])
  @@map("tutor_availability")
}

model SystemSettings {
  id    String @id @default(uuid()) @db.Uuid
  key   String @unique
  value Json

  @@map("system_settings")
}
